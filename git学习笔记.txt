初始化一个Git仓库，使用git init命令。

添加文件到Git仓库，分两步：

    1、使用命令git add <file>，注意，可反复多次使用，添加多个文件；
    2、使用命令git commit -m <message>，完成。



要随时掌握工作区的状态，使用git status命令。

如果git status告诉你有文件被修改过，用git diff可以查看修改内容。

HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用Git reset --hard commit_id

穿梭前，用git log可以查看提交历史，以便确定要退回到哪个版本

要重返未来， 用git relog查看命令历史，以确定要回到未来的哪个版本

咱暂缓区是Git非常重要的概念，弄明白了暂缓区，就弄明白了Git的很多操作到底干了什么

为什么Git比其他版本控制系统设计得更优秀，因为Git跟踪并管理得是修改，而非文件，每次修改，如果不用git add到暂缓区，那就不会加入到git commit中

场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file
场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区，想丢弃修改，分两步，第一步用命令git reset HEAD file,就回到了场景1，第二部按场景1操作
场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退异界，不过前提时没有推送到远程库

命令git rm用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能回复到最新版本，你会丢失最近一次提交后修改的内容

使用命令git remote add origin git@github.com:michaelliao/learngit.git将本地Git于远程GitHub关联起来，第一次使用git push -u origin master命令把本地文件
上传到远程库，其后可以使用git push origin master上传本地文件
